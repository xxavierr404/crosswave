services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: crosswave
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      MONGO_INITDB_DATABASE: crosswave
    networks:
      - main_net

  eureka:
    build:
      context: .
      dockerfile: ./crosswave-service-discovery/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - main_net

  gateway:
    build:
      context: .
      dockerfile: ./crosswave-gateway/Dockerfile
    ports:
      - "80:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8761/eureka"
    networks:
      - main_net

  auth:
    build:
      context: .
      dockerfile: ./crosswave-auth/Dockerfile
    depends_on:
      - mongo
    environment:
      CROSSWAVE_MONGODB_CONNECTIONSTRING: "mongodb://crosswave:12345678@mongo:27017/admin"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8761/eureka"
      SPRING_KAFKA_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - main_net

  music:
    build:
      context: .
      dockerfile: ./crosswave-music/Dockerfile
    depends_on:
      - mongo
    environment:
      CROSSWAVE_MONGODB_CONNECTIONSTRING: "mongodb://crosswave:12345678@mongo:27017/admin"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8761/eureka"
      SPRING_KAFKA_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - main_net

  analytics:
    build:
      context: .
      dockerfile: ./crosswave-analytics/Dockerfile
    depends_on:
      - mongo
    environment:
      CROSSWAVE_MONGODB_CONNECTIONSTRING: "mongodb://crosswave:12345678@mongo:27017/admin"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka:8761/eureka"
      SPRING_KAFKA_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - main_net
    volumes:
      - "./dumps:/dumps"

  ai:
    build:
      context: crosswave-ai-service
    environment:
      EUREKA_SERVER: "http://eureka:8761/eureka"
    networks:
      - main_net
    volumes:
      - "./dumps:/app/recommendations/data_input"

  kafka:
    image: apache/kafka-native:4.0.0
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - main_net

  ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_NAME: "kraft"
    networks:
      - main_net

networks:
  main_net:
